/products:
  get:
    tags:
      - Products
    summary: List products
    description: Retrieve all products for the authenticated seller
    security:
      - BearerAuth: []
    parameters:
      - name: page
        in: query
        description: Page number for pagination
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: limit
        in: query
        description: Number of products per page
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
      - name: category
        in: query
        description: Filter products by category
        required: false
        schema:
          type: string
      - name: sortBy
        in: query
        description: Sort field (name, price, quantity, createdAt)
        required: false
        schema:
          type: string
          enum: [name, price, quantity, createdAt]
          default: createdAt
      - name: sortOrder
        in: query
        description: Sort order
        required: false
        schema:
          type: string
          enum: [asc, desc]
          default: desc
    responses:
      '200':
        description: List of products retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: '../components/schemas/Product.yaml'
                pagination:
                  $ref: '../components/schemas/Common.yaml#/Pagination'
      '401':
        description: Unauthorized - Invalid or missing authentication token
      '500':
        description: Internal server error

  post:
    tags:
      - Products
    summary: Create a new product
    description: Create a new product and emit ProductCreated event
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ProductRequests.yaml#/CreateProductRequest'
    responses:
      '201':
        description: Product created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Product.yaml'
      '400':
        description: Bad request - Invalid product data
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Common.yaml#/ErrorResponse'
      '401':
        description: Unauthorized - Invalid or missing authentication token
      '500':
        description: Internal server error

/products/{id}:
  get:
    tags:
      - Products
    summary: Get product by ID
    description: Retrieve a specific product by its ID
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Product ID
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: Product retrieved successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Product.yaml'
      '401':
        description: Unauthorized - Invalid or missing authentication token
      '404':
        description: Product not found
      '500':
        description: Internal server error

  put:
    tags:
      - Products
    summary: Update product
    description: Update an existing product and emit ProductUpdated event (and possibly LowStockWarning)
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Product ID
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/ProductRequests.yaml#/UpdateProductRequest'
    responses:
      '200':
        description: Product updated successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Product.yaml'
      '400':
        description: Bad request - Invalid product data
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Common.yaml#/ErrorResponse'
      '401':
        description: Unauthorized - Invalid or missing authentication token
      '404':
        description: Product not found
      '500':
        description: Internal server error

  delete:
    tags:
      - Products
    summary: Delete product
    description: Delete a product and emit ProductDeleted event
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        description: Product ID
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: Product deleted successfully
      '401':
        description: Unauthorized - Invalid or missing authentication token
      '404':
        description: Product not found
      '500':
        description: Internal server error
